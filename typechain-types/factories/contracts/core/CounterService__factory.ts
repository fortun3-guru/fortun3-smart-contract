/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CounterService,
  CounterServiceInterface,
} from "../../../contracts/core/CounterService";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_f3Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdcToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "F3TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientF3Balance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidExchangeRate",
    type: "error",
  },
  {
    inputs: [],
    name: "USDCTransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "receiptId",
        type: "uint256",
      },
    ],
    name: "ConsultPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usdcAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "f3Amount",
        type: "uint256",
      },
    ],
    name: "Exchange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "receiptId",
        type: "uint256",
      },
    ],
    name: "MintingPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "usdcAmount",
        type: "uint256",
      },
    ],
    name: "exchange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exchangeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "f3Token",
    outputs: [
      {
        internalType: "contract F3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payForConsult",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "payForMinting",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rate",
        type: "uint256",
      },
    ],
    name: "setExchangeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_f3Token",
        type: "address",
      },
    ],
    name: "setF3Token",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdcToken",
        type: "address",
      },
    ],
    name: "setUSDCToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdcToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a48380380610a4883398101604081905261002f916100e3565b61003833610077565b60018055600280546001600160a01b039384166001600160a01b03199182161790915560038054929093169116179055600a6004556000600555610116565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100de57600080fd5b919050565b600080604083850312156100f657600080fd5b6100ff836100c7565b915061010d602084016100c7565b90509250929050565b610923806101256000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b1461014357806393cd792414610154578063b5e622491461015c578063db068e0e1461016f578063e05c041d14610182578063f2fde38b1461018a57600080fd5b80630f5a9d01146100b957806311eac855146100ce5780633ba0b9a9146100fe578063535565591461011557806358a958e714610128578063715018a61461013b575b600080fd5b6100cc6100c736600461081b565b61019d565b005b6003546100e1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61010760045481565b6040519081526020016100f5565b6100cc61012336600461084b565b6101c7565b6002546100e1906001600160a01b031681565b6100cc610313565b6000546001600160a01b03166100e1565b610107610327565b6100cc61016a36600461081b565b6104bf565b6100cc61017d36600461084b565b6104e9565b610107610517565b6100cc61019836600461081b565b61069a565b6101a5610718565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6003546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561021e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102429190610864565b61025f5760405163a55b288760e01b815260040160405180910390fd5b60006004548261026f919061089c565b6002546040516340c10f1960e01b8152336004820152602481018390529192506001600160a01b0316906340c10f1990604401600060405180830381600087803b1580156102bc57600080fd5b505af11580156102d0573d6000803e3d6000fd5b505060408051858152602081018590523393507f26981b9aefbb0f732b0264bd34c255e831001eb50b06bc85b32cc39e1438972192500160405180910390a25050565b61031b610718565b6103256000610772565b565b60006103316107c2565b6002546040516370a0823160e01b8152336004820152670de0b6b3a76400009182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610385573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a991906108bb565b10156103c857604051633540763960e21b815260040160405180910390fd5b6002546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561041f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104439190610864565b61046057604051635501ea3160e01b815260040160405180910390fd5b60058054906000610470836108d4565b909155505060055460405190815233907f12b19d7009204c23ccd823dd501dfb62d36e89fd8de324546f07649ebf26bb3c906020015b60405180910390a250506005546104bc60018055565b90565b6104c7610718565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6104f1610718565b806000036105125760405163a2ec3a5560e01b815260040160405180910390fd5b600455565b60006105216107c2565b6002546040516370a0823160e01b8152336004820152670de0b6b3a76400009182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610575573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059991906108bb565b10156105b857604051633540763960e21b815260040160405180910390fd5b6002546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561060f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106339190610864565b61065057604051635501ea3160e01b815260040160405180910390fd5b60058054906000610660836108d4565b909155505060055460405190815233907f1a11c88a5d61618079bc3e405f135ba106edb7142983f62ed98b625b1d949b22906020016104a6565b6106a2610718565b6001600160a01b03811661070c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61071581610772565b50565b6000546001600160a01b031633146103255760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610703565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6002600154036108145760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610703565b6002600155565b60006020828403121561082d57600080fd5b81356001600160a01b038116811461084457600080fd5b9392505050565b60006020828403121561085d57600080fd5b5035919050565b60006020828403121561087657600080fd5b8151801515811461084457600080fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156108b6576108b6610886565b500290565b6000602082840312156108cd57600080fd5b5051919050565b6000600182016108e6576108e6610886565b506001019056fea2646970667358221220441d069edc941fd7cfb6a49da88d2911c0c1b7de0ac23043a4619858b42942f164736f6c634300080e0033";

type CounterServiceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CounterServiceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CounterService__factory extends ContractFactory {
  constructor(...args: CounterServiceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _f3Token: PromiseOrValue<string>,
    _usdcToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CounterService> {
    return super.deploy(
      _f3Token,
      _usdcToken,
      overrides || {}
    ) as Promise<CounterService>;
  }
  override getDeployTransaction(
    _f3Token: PromiseOrValue<string>,
    _usdcToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_f3Token, _usdcToken, overrides || {});
  }
  override attach(address: string): CounterService {
    return super.attach(address) as CounterService;
  }
  override connect(signer: Signer): CounterService__factory {
    return super.connect(signer) as CounterService__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterServiceInterface {
    return new utils.Interface(_abi) as CounterServiceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CounterService {
    return new Contract(address, _abi, signerOrProvider) as CounterService;
  }
}
