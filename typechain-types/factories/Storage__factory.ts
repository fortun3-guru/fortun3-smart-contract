/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Storage, StorageInterface } from "../Storage";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__name",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405260056080819052640312e302e360dc1b60a09081526100269160009190610078565b5034801561003357600080fd5b5060405161061c38038061061c83398101604081905261005291610127565b61005b81610061565b50610230565b8051610074906001906020840190610078565b5050565b828054610084906101f6565b90600052602060002090601f0160209004810192826100a657600085556100ec565b82601f106100bf57805160ff19168380011785556100ec565b828001600101855582156100ec579182015b828111156100ec5782518255916020019190600101906100d1565b506100f89291506100fc565b5090565b5b808211156100f857600081556001016100fd565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561013a57600080fd5b82516001600160401b038082111561015157600080fd5b818501915085601f83011261016557600080fd5b81518181111561017757610177610111565b604051601f8201601f19908116603f0116810190838211818310171561019f5761019f610111565b8160405282815288868487010111156101b757600080fd5b600093505b828410156101d957848401860151818501870152928501926101bc565b828411156101ea5760008684830101525b98975050505050505050565b600181811c9082168061020a57607f821691505b60208210810361022a57634e487b7160e01b600052602260045260246000fd5b50919050565b6103dd8061023f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806317d7de7c1461004657806354fd4d5014610064578063c47f00271461006c575b600080fd5b61004e610081565b60405161005b9190610251565b60405180910390f35b61004e610113565b61007f61007a3660046102bc565b6101a1565b005b6060600180546100909061036d565b80601f01602080910402602001604051908101604052809291908181526020018280546100bc9061036d565b80156101095780601f106100de57610100808354040283529160200191610109565b820191906000526020600020905b8154815290600101906020018083116100ec57829003601f168201915b5050505050905090565b600080546101209061036d565b80601f016020809104026020016040519081016040528092919081815260200182805461014c9061036d565b80156101995780601f1061016e57610100808354040283529160200191610199565b820191906000526020600020905b81548152906001019060200180831161017c57829003601f168201915b505050505081565b80516101b49060019060208401906101b8565b5050565b8280546101c49061036d565b90600052602060002090601f0160209004810192826101e6576000855561022c565b82601f106101ff57805160ff191683800117855561022c565b8280016001018555821561022c579182015b8281111561022c578251825591602001919060010190610211565b5061023892915061023c565b5090565b5b80821115610238576000815560010161023d565b600060208083528351808285015260005b8181101561027e57858101830151858201604001528201610262565b81811115610290576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156102ce57600080fd5b813567ffffffffffffffff808211156102e657600080fd5b818401915084601f8301126102fa57600080fd5b81358181111561030c5761030c6102a6565b604051601f8201601f19908116603f01168101908382118183101715610334576103346102a6565b8160405282815287602084870101111561034d57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c9082168061038157607f821691505b6020821081036103a157634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122091527cd22006833166f047014f0d9d10ebbdd59002e7b5a9589790fd5e6a8ab964736f6c634300080e0033";

type StorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Storage__factory extends ContractFactory {
  constructor(...args: StorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Storage> {
    return super.deploy(__name, overrides || {}) as Promise<Storage>;
  }
  override getDeployTransaction(
    __name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(__name, overrides || {});
  }
  override attach(address: string): Storage {
    return super.attach(address) as Storage;
  }
  override connect(signer: Signer): Storage__factory {
    return super.connect(signer) as Storage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StorageInterface {
    return new utils.Interface(_abi) as StorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Storage {
    return new Contract(address, _abi, signerOrProvider) as Storage;
  }
}
